env:
  global:
    - IOS_SCHEME="BFKit iOS"
    - MACOS_SCHEME="BFKit macOS"
    - WATCHOS_SCHEME="BFKit watchOS"
    - EXAMPLE_SCHEME="BFKitExample"

matrix:
  include:
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: SPM="YES"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: SPM="YES"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="OS=11.4,name=iPhone X"                     SCHEME="$IOS_SCHEME"     RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="OS=11.1,name=iPhone 7 Plus"                SCHEME="$IOS_SCHEME"     RUN_TESTS="YES" LINT="YES" CODECOV="YES" EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="OS=10.3.1,name=iPhone 6"                   SCHEME="$IOS_SCHEME"     RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="OS=9.0,name=iPhone 5s"                     SCHEME="$IOS_SCHEME"     RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="OS=4.2,name=Apple Watch Series 3 - 42mm"   SCHEME="$WATCHOS_SCHEME" RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="OS=3.2,name=Apple Watch Series 2 - 42mm"   SCHEME="$WATCHOS_SCHEME" RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="OS=2.0,name=Apple Watch - 38mm"            SCHEME="$WATCHOS_SCHEME" RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="arch=x86_64"                               SCHEME="$MACOS_SCHEME"   RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="BFKit.xcodeproj"                DESTINATION="arch=x86_64"                               SCHEME="$MACOS_SCHEME"   RUN_TESTS="YES" LINT="NO"  CODECOV="NO"  EXAMPLE="NO"
    - os: osx
      language: objective-c
      osx_image: xcode9.4
      env: PROJ="Example/BFKitExample.xcodeproj" DESTINATION="OS=11.3,name=iPhone 7 Plus"                SCHEME="$EXAMPLE_SCHEME" RUN_TESTS="NO"  LINT="NO"  CODECOV="NO"  EXAMPLE="YES"

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      gem install xcpretty -N --no-ri --no-rdoc;
      gem install cocoapods --pre --no-rdoc --no-ri --no-document;
      brew update;
      brew outdated carthage || brew upgrade carthage;
    fi

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/raw/02090c7ede5a637b76e6df1710e83cd0bbe7dcdf/swiftenv-install.sh)";
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      ./install_swiftlint.sh;
    fi

script:
  - set -o pipefail

  - swift -version

  - if [ "$SPM" == "YES" ]; then
      swift build;
      swift test;
    fi

  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      xcodebuild -version;
      xcodebuild -showsdks;
    fi

  - if [ "$RUN_TESTS" == "YES" ]; then
      xcodebuild clean test -project "$PROJ" -scheme "$SCHEME" -destination "$DESTINATION" -enableCodeCoverage YES | xcpretty;
    fi
  - if [ "$RUN_TESTS" == "NO" ]; then
      xcodebuild clean build -project "$PROJ" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release | xcpretty;
    fi

  - if [ "$EXAMPLE" == "YES" ]; then
      xcodebuild clean build -project "$PROJ" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO | xcpretty;
    fi

  - if [ "$LINT" == "YES" ]; then
      swiftlint;
      pod lib lint --verbose;
      carthage build --no-skip-current;
    fi

after_success:
  - if [ "$CODECOV" == "YES" ]; then
      bash <(curl -s https://codecov.io/bash) -X xcodeplist;
    fi
